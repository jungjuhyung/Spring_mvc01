<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 어노테이션 하기 위한 태그들 -->
	<!-- <annotation-driven/> : config의 어노테이션과 다른부분 -->
	<annotation-driven/>
	<context:component-scan base-package="com.ict"/>

	<!-- HandlerMapping : 요청에 따른 컨트롤러 클래스 지정 (일반적으로는 어노테이션 처리) -->
	<!-- 아래는 어노테이션을 쓰지 않은 옛날 방식이다. -->
	<!-- jsp mvc에서 cmd 받아서 보내주는 것과 비슷하다. -->
	<!-- name에 무조건 /를 붙여줘야한다. -->
	<beans:bean name="/start1.do" class="com.ict.controller.Start1Controller"/>
	<beans:bean name="/start2.do" class="com.ict.controller.Start2Controller"/>
	 



	<!-- 여기는 기본 설정들 -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	
	<!-- 이미지, css, javascript 파일 등의 리소스 파일을 저장할 경로를 지정하는 곳 -->
	<resources mapping="/resources/**" location="/resources/" />


	
	<!--
	ViewResolves는 ModelandView의 ViewName 속성에 저장된 파일명에 prefix와 suffix를 붙여서
	완전한 파일명으로 변환해준다.
	만일 views 안에 다른 폴더에 있는 jsp파일에 가고 싶다면 controller에서 ViewName을 저장할 때 
	"폴더명/파일명"으로 저장한다.
	-->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 파일 업로드용 클래스 등록 -->
	<!-- CMR로 class를 검색하면 CommonsMultipartResolver를 찾을 수 있다 카멜 표기법으로 찾기-->
	<!-- jsp에서 multipartrequest 생성을 여기서 하는 것이다. -->
	<!--
	jsp 방식의 MultipartRequest를 사용하기 위해서는 CommonsMultipartResolver를 비활성화해야한다.
	-->

	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="1048576000" />
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>
</beans:beans>






